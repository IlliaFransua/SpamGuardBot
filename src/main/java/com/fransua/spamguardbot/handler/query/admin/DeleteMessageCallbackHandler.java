package com.fransua.spamguardbot.handler.query.admin;


import com.fransua.spamguardbot.config.BotConfig;
import com.fransua.spamguardbot.handler.query.CallbackQueryHandler;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import org.telegram.telegrambots.meta.api.methods.AnswerCallbackQuery;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageReplyMarkup;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.message.Message;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.generics.TelegramClient;

// –Ω–∞–ø–∏—à—É —Ç—É—Ç –∫–æ–º–µ–Ω—Ç—ã —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –±—ã—Å—Ç—Ä–æ –æ—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ç—å

public class DeleteMessageCallbackHandler extends CallbackQueryHandler {

  private boolean isDataValid(String callbackQueryData) {
    return BotConfig.getCallbackDataList().stream()
        .anyMatch(callbackData -> callbackData.equals(callbackQueryData));
  }

  @Override
  public boolean canHandle(Update update) { // TODO: —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
    if (!update.hasCallbackQuery()) {
      return false;
    }
    CallbackQuery callbackQuery = update.getCallbackQuery();
    if (!(callbackQuery.getMessage() instanceof Message)) {
      return false;
    }
    String callbackQueryData = callbackQuery.getData();

//    System.out.println(BotConfig.getCallbackDataList().stream()
//        .anyMatch(callbackData -> callbackData.equals(callbackQuery.getData())));

//    long messageId = update.getCallbackQuery().getMessage().getMessageId();

    return isDataValid(callbackQueryData);
  }

  @Override
  public void handle(TelegramClient telegramClient, Update update) throws Exception {
//    System.out.println(update);
    CallbackQuery callbackQuery = update.getCallbackQuery();
    String callbackQueryData = callbackQuery.getData();

    // –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ—Ç –ª–∏ –≤–æ–æ–±—â–µ —Ö–æ—Ç—å —Å –æ–¥–Ω–∏–º –¥–µ–ª–∏—Ç –∫–∞–∞–ª–±–µ–∫–æ–º –Ω–∞ –¥–µ–ª–∏—Ç –º–µ—Å–µ–¥–∂—Å
    if (BotConfig.getDeleteMessageCallbackDataList().stream()
        .noneMatch(callbackData -> callbackData.equals(callbackQueryData))) {
      return;
    }

    // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—É–¥—å–±—É –≤–µ—Ç–∫–∏ —Ä–∞–∑–≤–∏—Ç–∏—è
    if (callbackQueryData.equals(BotConfig.getDeleteMessageCallbackData(true))) {
      telegramClient.execute(AnswerCallbackQuery
          .builder()
          .callbackQueryId(callbackQuery.getId())
          .text("üôâ –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ. –î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è.")
          .showAlert(true)
          .build());
      return;
    }

    // –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –ø–∞—Ä—Å–∏–º –∫–∞–ª–ª–±–µ–∫ –ø—ã—Ç–∞—è—Å—å –∏–∑–≤–ª–µ—á –∏–∑ –Ω–µ–≥–æ —Å—Å—ã–ª–∫—É
    Message callbackQueryMessageessage = (Message) callbackQuery.getMessage();
    String msgText = callbackQueryMessageessage.getText();

    int beginIndex = msgText.indexOf("üåö") + 2;
    int endIndex = msgText.indexOf("üèÜ");
    String rawJson = msgText.substring(beginIndex, endIndex).trim();

    JsonObject jsonObject = JsonParser.parseString(rawJson).getAsJsonObject();

    long spamMessageChatId = jsonObject.get("chatId").getAsLong();
    int spamMessageId = Integer.parseInt(jsonObject.get("messageId").toString());

    // —Ç—É—Ç —Ä–∞–∑–≤–∏–ª–∫–∞ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —É –Ω–∞—Å —Ç–∞–º –ø–æ–ª—É—á–∏–ª–æ—Å—å –∏–∑–≤–ª–µ—á –¥–∞–Ω–Ω—ã–µ (–Ω—É —Ç—ã –ø–æ–Ω—è–ª)
    try {
      telegramClient.execute(DeleteMessage
          .builder()
          .chatId(spamMessageChatId)
          .messageId(spamMessageId)
          .build());

      telegramClient.execute(AnswerCallbackQuery
          .builder()
          .callbackQueryId(callbackQuery.getId())
          .text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω–æ.")
          .showAlert(false)
          .build());

      telegramClient.execute(EditMessageReplyMarkup
          .builder()
          .chatId(callbackQueryMessageessage.getChatId())
          .messageId(callbackQueryMessageessage.getMessageId())
          .replyMarkup(BotConfig.createInlineKeyboardMarkup(true, false, false))
          .build());
    } catch (TelegramApiException e) {
      // TODO: –¥–æ–±–∞–≤–∏—Ç—å –±—ã –ª–æ–≥–≥–µ—Ä
      String description = e.getMessage();

      if (description != null && description.contains("message can't be deleted")) {
        telegramClient.execute(AnswerCallbackQuery
            .builder()
            .callbackQueryId(callbackQuery.getId())
            .text("‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è. Telegram –Ω–µ –¥–∞—ë—Ç –±–æ—Ç–∞–º —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 48 —á–∞—Å–æ–≤.")
            .showAlert(true)
            .build());
      } else {
        telegramClient.execute(AnswerCallbackQuery
            .builder()
            .callbackQueryId(callbackQuery.getId())
            .text("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage())
            .showAlert(true)
            .build());
      }
    }
  }
}
